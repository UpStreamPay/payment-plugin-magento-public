<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="RepositoryScanner.php" path="/setup/src/Magento/Setup/Module/Di/Code/Scanner">
    <totals>
      <lines total="69" comments="23" code="46" executable="23" executed="0" percent="0.00"/>
      <methods count="2" tested="0" percent="0.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="Magento\Setup\Module\Di\Code\Scanner\RepositoryScanner" start="13" executable="23" executed="0" crap="90">
      <namespace name="Magento\Setup\Module\Di\Code\Scanner"/>
      <method name="collectEntities" signature="collectEntities(array $files)" start="26" end="56" crap="72" executable="22" executed="0" coverage="0"/>
      <method name="setUseAutoload" signature="setUseAutoload($useAutoload)" start="64" end="67" crap="2" executable="1" executed="0" coverage="0"/>
    </class>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * Copyright &#xA9; Magento, Inc. All rights reserved.</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> * See COPYING.txt for license details.</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="6">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Setup\Module\Di\Code\Scanner</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="7"/>
      <line no="8">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Autoload\AutoloaderRegistry</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="9"/>
      <line no="10">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="11">
        <token name="T_DOC_COMMENT"> * Class RepositoryScanner</token>
      </line>
      <line no="12">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="13">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RepositoryScanner</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ScannerInterface</token>
      </line>
      <line no="14">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="15">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="16">
        <token name="T_DOC_COMMENT">     * @var bool</token>
      </line>
      <line no="17">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="18">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$useAutoload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19"/>
      <line no="20">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="21">
        <token name="T_DOC_COMMENT">     * Get array of class names</token>
      </line>
      <line no="22">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="23">
        <token name="T_DOC_COMMENT">     * @param array $files</token>
      </line>
      <line no="24">
        <token name="T_DOC_COMMENT">     * @return array</token>
      </line>
      <line no="25">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="26">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">collectEntities</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="27">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="28">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$files</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$fileName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="30">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dom</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\DOMDocument</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$dom</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">loadXML</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">file_get_contents</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$fileName</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$xpath</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_FULLY_QUALIFIED">\DOMXPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$dom</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** @var $node \DOMNode */</token>
      </line>
      <line no="34">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$xpath</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">query</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'//preference'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="35">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$forType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">attributes</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getNamedItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'for'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$node</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">attributes</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getNamedItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'type'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$forType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
      </line>
      <line no="38">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">substr</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$forType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_MINUS">-</token>
        <token name="T_LNUMBER">19</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_EQUAL">==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'RepositoryInterface'</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="41">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">class_exists</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="42">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_STRING">AutoloaderRegistry</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">getAutoloader</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">loadClass</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="43">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$persistor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'\\Repository'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'InterfacePersistor'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$factory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'\\Repository'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'InterfaceFactory'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$searchResultFactory</token>
      </line>
      <line no="46">
        <token name="T_WHITESPACE">                            </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">str_replace</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'\\Repository'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'SearchResultInterfaceFactory'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$persistor</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$persistor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$factory</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$factory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$searchResultFactory</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$searchResultFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$replacementType</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">nodeValue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$repositoryClassNames</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="57"/>
      <line no="58">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * Sets autoload flag</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @param boolean $useAutoload</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setUseAutoload</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$useAutoload</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">useAutoload</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$useAutoload</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="68">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="69"/>
    </source>
  </file>
</phpunit>
