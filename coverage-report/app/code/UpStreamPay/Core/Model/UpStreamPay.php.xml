<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="UpStreamPay.php" path="/app/code/UpStreamPay/Core/Model">
    <totals>
      <lines total="274" comments="82" code="192" executable="60" executed="60" percent="100.00"/>
      <methods count="12" tested="12" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UpStreamPay\Core\Model\UpStreamPay" start="37" executable="60" executed="60" crap="22">
      <namespace name="UpStreamPay\Core\Model"/>
      <method name="__construct" signature="__construct(UpStreamPay\Core\Model\Synchronize\OrderSynchronizeService $orderSynchronizeService, UpStreamPay\Core\Model\Config $config, Magento\Framework\Model\Context $context, Magento\Framework\Registry $registry, Magento\Framework\Api\ExtensionAttributesFactory $extensionFactory, Magento\Framework\Api\AttributeValueFactory $customAttributeFactory, Magento\Payment\Helper\Data $paymentData, Magento\Framework\App\Config\ScopeConfigInterface $scopeConfig, Magento\Payment\Model\Method\Logger $logger, Magento\Framework\Model\ResourceModel\AbstractResource $resource, Magento\Framework\Data\Collection\AbstractDb $resourceCollection, array $data, Magento\Directory\Helper\Data $directory)" start="78" end="106" crap="1" executable="13" executed="13" coverage="100"/>
      <method name="getPaymentAction" signature="getPaymentAction(): string" start="111" end="114" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="canAuthorize" signature="canAuthorize(): bool" start="121" end="124" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="canCapture" signature="canCapture(): bool" start="131" end="134" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="authorize" signature="authorize(Magento\Payment\Model\InfoInterface $payment, $amount)" start="139" end="158" crap="3" executable="6" executed="6" coverage="100"/>
      <method name="capture" signature="capture(Magento\Payment\Model\InfoInterface $payment, $amount)" start="163" end="187" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="cancel" signature="cancel(Magento\Payment\Model\InfoInterface $payment)" start="192" end="202" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="void" signature="void(Magento\Payment\Model\InfoInterface $payment)" start="207" end="217" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="denyPayment" signature="denyPayment(Magento\Payment\Model\InfoInterface $payment)" start="222" end="232" crap="2" executable="7" executed="7" coverage="100"/>
      <method name="refund" signature="refund(Magento\Payment\Model\InfoInterface $payment, $amount)" start="237" end="243" crap="1" executable="2" executed="2" coverage="100"/>
      <method name="canOrder" signature="canOrder()" start="248" end="251" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="order" signature="order(Magento\Payment\Model\InfoInterface $payment, $amount)" start="256" end="272" crap="3" executable="6" executed="6" coverage="100"/>
    </class>
    <coverage>
      <line nr="93">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="94">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="113">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="123">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
      </line>
      <line nr="133">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
      </line>
      <line nr="142">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="146">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="147">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="149">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="154">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="157">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
      </line>
      <line nr="166">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="170">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="171">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="173">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="177">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
      </line>
      <line nr="180">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="183">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="186">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
      </line>
      <line nr="194">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="195">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="196">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="197">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="199">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="201">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="209">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="210">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="211">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="212">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="214">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="216">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="224">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="225">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="226">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="227">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="229">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="231">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="240">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
      </line>
      <line nr="242">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
      </line>
      <line nr="250">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="258">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="262">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="263">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="265">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="268">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="271">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
      </line>
      <line nr="95">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="96">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="97">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="98">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="99">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="100">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="101">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="102">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="103">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="104">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="105">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testAuthorizeException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCaptureException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCanCapture"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testRefund"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testGetPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrder"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testOrderException"/>
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
      <line nr="198">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testCancel"/>
      </line>
      <line nr="213">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testVoid"/>
      </line>
      <line nr="228">
        <covered by="UpStreamPay\Core\Test\Model\UpStreamPayTest::testDenyPayment"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * UpStream Pay</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2023 UpStream Pay.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * This file is open source and available under the BSD 3 license.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * See the LICENSE file for more info.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * Author: Claranet France &lt;info@fr.clara.net&gt;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Directory\Helper\Data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">DirectoryHelper</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Api\AttributeValueFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Api\ExtensionAttributesFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\Config\ScopeConfigInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Data\Collection\AbstractDb</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Model\Context</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Model\ResourceModel\AbstractResource</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Registry</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Helper\Data</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\InfoInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\Method\AbstractMethod</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\Method\Logger</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\MethodInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Client\Exception\NoSessionFoundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\NoTransactionsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Synchronize\OrderSynchronizeService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31"/>
      <line no="32">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT"> * Class UpStreamPay</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT"> * @package Model</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="37">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">UpStreamPay</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXTENDS">extends</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AbstractMethod</token>
      </line>
      <line no="38">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_code</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">METHOD_CODE_UPSTREAM_PAY</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40"/>
      <line no="41">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_isGateway</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42"/>
      <line no="43">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canOrder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44"/>
      <line no="45">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canAuthorize</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="46"/>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canCapture</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canCapturePartial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="49"/>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canRefund</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canRefundInvoicePartial</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="52"/>
      <line no="53">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canVoid</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="54"/>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canUseCheckout</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canUseInternal</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="58"/>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canFetchTransactionInfo</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="60"/>
      <line no="61">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PROTECTED">protected</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$_canReviewPayment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="62"/>
      <line no="63">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * @param OrderSynchronizeService $orderSynchronizeService</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @param Config $config</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * @param Context $context</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @param Registry $registry</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @param ExtensionAttributesFactory $extensionFactory</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     * @param AttributeValueFactory $customAttributeFactory</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * @param Data $paymentData</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * @param ScopeConfigInterface $scopeConfig</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * @param Logger $logger</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @param AbstractResource|null $resource</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     * @param AbstractDb|null $resourceCollection</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * @param array $data</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * @param DirectoryHelper|null $directory</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderSynchronizeService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderSynchronizeService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Context</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="82">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Registry</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$registry</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ExtensionAttributesFactory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$extensionFactory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">AttributeValueFactory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$customAttributeFactory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="85">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$paymentData</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">ScopeConfigInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$scopeConfig</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">Logger</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">AbstractResource</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resource</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">AbstractDb</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resourceCollection</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">DirectoryHelper</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$directory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">parent</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$context</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$registry</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$extensionFactory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$customAttributeFactory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$paymentData</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$scopeConfig</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$resource</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$resourceCollection</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$data</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$directory</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="107"/>
      <line no="108">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="109">
        <token name="T_DOC_COMMENT">     * @return string</token>
      </line>
      <line no="110">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="115"/>
      <line no="116">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="117">
        <token name="T_DOC_COMMENT">     * Can authorize if payment method configured to do so.</token>
      </line>
      <line no="118">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="119">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="120">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">canAuthorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="127">
        <token name="T_DOC_COMMENT">     * Can capture if payment method configured to do so.</token>
      </line>
      <line no="128">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="129">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="130">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">canCapture</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="135"/>
      <line no="136">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="137">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="138">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">authorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Before we can verify anything, the transaction is pending.</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="143"/>
      <line no="144">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//If the order has not been sent to purse yet, don't trigger authorize.</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order_sent_to_purse'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">AUTHORIZE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="149">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">NoSessionFoundException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NoTransactionsException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="150">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No session found because authorize is done before UpStream Pay has the order.</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No transaction has been found.</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//In this scenario nothing to void.</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="156"/>
      <line no="157">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="159"/>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="161">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="162">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">capture</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Before we can verify anything, the transaction is pending.</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="167"/>
      <line no="168">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//If the order has not been sent to purse yet, don't trigger capture.</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order_sent_to_purse'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">canOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_COMMENT">//This is triggered in case of capture using order action mode.</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CAPTURE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSE">else</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_COMMENT">//On initial place order this will always throw an exception because UpStream Pay doesn't have the</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_COMMENT">//data yet. Initial capture is done after redirection or through webhook.</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">CAPTURE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">NoSessionFoundException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NoTransactionsException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No session found because capture is done before UpStream Pay has the order.</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No operation has been done so nothing to void or refund.</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="185"/>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="188"/>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="190">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="191">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">cancel</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">canOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CANCEL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VOID_ACTION</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionDenied</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="200"/>
      <line no="201">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="203"/>
      <line no="204">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="208">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="209">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">canOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CANCEL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VOID_ACTION</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionDenied</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="215"/>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="218"/>
      <line no="219">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="220">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="221">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">denyPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">canOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CANCEL</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VOID_ACTION</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionDenied</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230"/>
      <line no="231">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="233"/>
      <line no="234">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="235">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="236">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">refund</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Cast to float because yes, magento sends back a string here....</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_CAST">(float)</token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">REFUND_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="241"/>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="244"/>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="246">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="247">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="248">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">canOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="249">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_ORDER</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="251">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="252"/>
      <line no="253">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="254">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="255">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">order</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="258">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="259"/>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="261">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//If the order has not been sent to purse yet, don't trigger order.</token>
      </line>
      <line no="262">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOL_CAST">(bool)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order_sent_to_purse'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSynchronizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">NoSessionFoundException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NoTransactionsException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No session found because order action is done before UpStream Pay has the order.</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//No operation has been done so nothing to void or refund.</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="269">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="270"/>
      <line no="271">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="273">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274"/>
    </source>
  </file>
</phpunit>
