<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="OrderSynchronizeService.php" path="/app/code/UpStreamPay/Core/Model/Synchronize">
    <totals>
      <lines total="131" comments="45" code="86" executable="31" executed="31" percent="100.00"/>
      <methods count="2" tested="2" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UpStreamPay\Core\Model\Synchronize\OrderSynchronizeService" start="42" executable="31" executed="31" crap="12">
      <namespace name="UpStreamPay\Core\Model\Synchronize"/>
      <method name="__construct" signature="__construct(UpStreamPay\Client\Model\Client\ClientInterface $client, UpStreamPay\Core\Model\Synchronize\SynchronizeUpStreamPayPaymentData $synchronizeUpStreamPayPaymentData, UpStreamPay\Core\Model\Actions\CaptureService $captureService, UpStreamPay\Core\Model\Actions\AuthorizeService $authorizeService, UpStreamPay\Core\Model\Actions\VoidService $voidService, UpStreamPay\Core\Model\Actions\RefundService $refundService, UpStreamPay\Core\Model\Actions\OrderService $orderService, UpStreamPay\Core\Model\Actions\OrderActionCaptureService $orderActionCaptureService, UpStreamPay\Core\Model\Actions\CancelService $cancelService)" start="55" end="66" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="execute" signature="execute(Magento\Payment\Model\InfoInterface $payment, float $amount, string $action): Magento\Payment\Model\InfoInterface" start="87" end="129" crap="11" executable="30" executed="30" coverage="100"/>
    </class>
    <coverage>
      <line nr="66">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="89">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="90">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="92">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="93">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="95">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="96">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
      </line>
      <line nr="97">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
      </line>
      <line nr="102">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="103">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="105">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="106">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="110">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="111">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
      </line>
      <line nr="112">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="113">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
      </line>
      <line nr="114">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="115">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
      </line>
      <line nr="116">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="117">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
      </line>
      <line nr="118">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="119">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
      </line>
      <line nr="120">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="121">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
      </line>
      <line nr="122">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="123">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
      </line>
      <line nr="125">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
      </line>
      <line nr="128">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Void payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Refund payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="98">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecuteException"/>
      </line>
      <line nr="104">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
      <line nr="107">
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Authorize payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order action payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order capture payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Order cancel payment action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Model\Synchronize\OrderSynchronizeServiceTest::testExecute with data set &quot;Unknown payment action&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * UpStream Pay</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2023 UpStream Pay.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * This file is open source and available under the BSD 3 license.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * See the LICENSE file for more info.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * Author: Claranet France &lt;info@fr.clara.net&gt;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Synchronize</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">GuzzleHttp\Exception\GuzzleException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Exception\LocalizedException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\InfoInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Client\Exception\NoSessionFoundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Client\Model\Client\ClientInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\AuthorizeErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\CaptureErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\NoPaymentMethodFoundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\NotEnoughFundException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\NoTransactionsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\OrderErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\AuthorizeService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\CancelService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\CaptureService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\OrderActionCaptureService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\OrderService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\RefundService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions\VoidService</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\OrderTransactions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Session\PurseSessionDataManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36"/>
      <line no="37">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="38">
        <token name="T_DOC_COMMENT"> * Class OrderSynchronizeService</token>
      </line>
      <line no="39">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT"> * @package UpStreamPay\Core\Model</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="42">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderSynchronizeService</token>
      </line>
      <line no="43">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="44">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @param ClientInterface $client</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @param SynchronizeUpStreamPayPaymentData $synchronizeUpStreamPayPaymentData</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @param CaptureService $captureService</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param AuthorizeService $authorizeService</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     * @param VoidService $voidService</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT">     * @param RefundService $refundService</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT">     * @param OrderService $orderService</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT">     * @param OrderActionCaptureService $orderActionCaptureService</token>
      </line>
      <line no="53">
        <token name="T_DOC_COMMENT">     * @param CancelService $cancelService</token>
      </line>
      <line no="54">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ClientInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$client</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SynchronizeUpStreamPayPaymentData</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$synchronizeUpStreamPayPaymentData</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CaptureService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AuthorizeService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authorizeService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">VoidService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$voidService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="61">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RefundService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$refundService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="62">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="63">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderActionCaptureService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderActionCaptureService</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="64">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CancelService</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$cancelService</token>
      </line>
      <line no="65">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="66">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="67"/>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     * Synchronize the order &amp; execute the given action.</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="72">
        <token name="T_DOC_COMMENT">     * @param float $amount</token>
      </line>
      <line no="73">
        <token name="T_DOC_COMMENT">     * @param string $action</token>
      </line>
      <line no="74">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="75">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="76">
        <token name="T_DOC_COMMENT">     * @throws GuzzleException</token>
      </line>
      <line no="77">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="78">
        <token name="T_DOC_COMMENT">     * @throws NoSessionFoundException</token>
      </line>
      <line no="79">
        <token name="T_DOC_COMMENT">     * @throws NoTransactionsException</token>
      </line>
      <line no="80">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="81">
        <token name="T_DOC_COMMENT">     * @throws AuthorizeErrorException</token>
      </line>
      <line no="82">
        <token name="T_DOC_COMMENT">     * @throws CaptureErrorException</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * @throws OrderErrorException</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     * @throws NotEnoughFundException</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     * @throws NoPaymentMethodFoundException</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$purseSessionId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getData</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">PurseSessionDataManager</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">PAYMENT_PURSE_SESSION_ID</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$orderId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getParentId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VOID_ACTION</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">REFUND_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$sessionTransactionsResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">client</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAllTransactionsForSession</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$purseSessionId</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$sessionTransactionsResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">                </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">NoTransactionsException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'No transactions found in API for the session with ID '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$purseSessionId</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Save UpStream Pay payment &amp; transaction data to DB.</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">synchronizeUpStreamPayPaymentData</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$sessionTransactionsResponse</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$orderId</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getQuoteId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">AUTHORIZE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">authorizeService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">CAPTURE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">captureService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">VOID_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">voidService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">REFUND_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">refundService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE">  </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CAPTURE_ACTION</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderActionCaptureService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$action</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_CANCEL</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">cancelService</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124"/>
      <line no="125">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="127"/>
      <line no="128">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="130">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="131"/>
    </source>
  </file>
</phpunit>
