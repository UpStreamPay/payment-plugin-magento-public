<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="CaptureService.php" path="/app/code/UpStreamPay/Core/Model/Actions">
    <totals>
      <lines total="247" comments="82" code="165" executable="79" executed="79" percent="100.00"/>
      <methods count="6" tested="6" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UpStreamPay\Core\Model\Actions\CaptureService" start="35" executable="79" executed="79" crap="24">
      <namespace name="UpStreamPay\Core\Model\Actions"/>
      <method name="__construct" signature="__construct(Magento\Framework\Api\SearchCriteriaBuilder $searchCriteriaBuilder, UpStreamPay\Core\Api\OrderTransactionsRepositoryInterface $orderTransactionsRepository, UpStreamPay\Core\Api\OrderPaymentRepositoryInterface $orderPaymentRepository, UpstreamPay\Core\Model\Config $config, Magento\Framework\Event\ManagerInterface $eventManager, Magento\Framework\Math\FloatComparator $floatComparator)" start="47" end="55" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="execute" signature="execute(Magento\Payment\Model\InfoInterface $payment, float $amount): Magento\Payment\Model\InfoInterface" start="67" end="148" crap="8" executable="52" executed="52" coverage="100"/>
      <method name="hasNoCaptureTransactions" signature="hasNoCaptureTransactions(array $captureTransactions): bool" start="157" end="160" crap="2" executable="1" executed="1" coverage="100"/>
      <method name="setTransactionId" signature="setTransactionId(UpStreamPay\Core\Api\Data\OrderTransactionsInterface $captureTransaction): void" start="169" end="174" crap="2" executable="2" executed="2" coverage="100"/>
      <method name="setTotalCaptureOnPayment" signature="setTotalCaptureOnPayment(UpStreamPay\Core\Api\Data\OrderPaymentSearchResultsInterface $orderPayments, array $captures): void" start="185" end="200" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="updateMagentoPayment" signature="updateMagentoPayment(bool $atLeastOneCaptureError, bool $atLeastOneCaptureWaiting, float $amountCaptured, float $amount, Magento\Payment\Model\InfoInterface $payment): Magento\Payment\Model\InfoInterface" start="214" end="245" crap="7" executable="15" executed="15" coverage="100"/>
    </class>
    <coverage>
      <line nr="55">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="69">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="70">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="71">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="72">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="75">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="76">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="77">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="78">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="79">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="80">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="83">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="84">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="87">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="88">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
      </line>
      <line nr="92">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="93">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="96">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="97">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
      </line>
      <line nr="98">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
      </line>
      <line nr="101">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="103">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
      </line>
      <line nr="104">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
      </line>
      <line nr="106">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="107">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="108">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="110">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
      </line>
      <line nr="111">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
      </line>
      <line nr="114">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="115">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="116">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="117">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="118">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="119">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="120">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="126">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="128">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="129">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="130">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="131">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="134">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="135">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="138">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="141">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="142">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="159">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="171">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="172">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="187">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="188">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="189">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="191">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="192">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="195">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="196">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="197">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="224">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="225">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="228">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="229">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="230">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="231">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="232">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="233">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="235">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
      </line>
      <line nr="236">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="239">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
      </line>
      <line nr="240">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
      </line>
      <line nr="244">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="81">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteWithNoCaptureTransactionAndOrderActionMode"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="121">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="132">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="143">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="144">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="145">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="146">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="147">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in waiting&quot;"/>
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithCaptureMode with data set &quot;One capture transaction in success with payment&quot;"/>
      </line>
      <line nr="227">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success&quot;"/>
      </line>
      <line nr="241">
        <covered by="Magento\PhpStan\UpStreamPay\Core\Test\Model\Actions\CaptureServiceTest::testExecuteCaptureWithOrderMode with data set &quot;One capture transaction in success &amp; one in error&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * UpStream Pay</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2023 UpStream Pay.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * This file is open source and available under the BSD 3 license.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * See the LICENSE file for more info.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * Author: Claranet France &lt;info@fr.clara.net&gt;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Api\SearchCriteriaBuilder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Exception\LocalizedException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Math\FloatComparator</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\InfoInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\MethodInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\Data\OrderPaymentInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\Data\OrderPaymentSearchResultsInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\Data\OrderTransactionsInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\OrderPaymentRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\OrderTransactionsRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\CaptureErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpstreamPay\Core\Model\Config</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\OrderTransactions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Event\ManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29"/>
      <line no="30">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="31">
        <token name="T_DOC_COMMENT"> * Class CaptureService</token>
      </line>
      <line no="32">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="33">
        <token name="T_DOC_COMMENT"> * @package UpStreamPay\Core\Model</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="35">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CaptureService</token>
      </line>
      <line no="36">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="37">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">string</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$upStreamPaySessionId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38"/>
      <line no="39">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="40">
        <token name="T_DOC_COMMENT">     * @param SearchCriteriaBuilder $searchCriteriaBuilder</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @param OrderTransactionsRepositoryInterface $orderTransactionsRepository</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @param OrderPaymentRepositoryInterface $orderPaymentRepository</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @param Config $config</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @param EventManager $eventManager</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @param FloatComparator $floatComparator</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="47">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="48">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SearchCriteriaBuilder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$searchCriteriaBuilder</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="49">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactionsRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderTransactionsRepository</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderPaymentRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPaymentRepository</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$eventManager</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">FloatComparator</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$floatComparator</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * Capture order.</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @param float $amount</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @throws CaptureErrorException</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="67">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">false</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$amountCaptured</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="73"/>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Get the capture transactions with a success status for the current order.</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFilter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactionsInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">TRANSACTION_TYPE</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">CAPTURE_ACTION</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFilter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactionsInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ORDER_ID</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderTransactionsRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getList</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getItems</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//If there are no capture transactions &amp; we are using the order action then don't bother going any further.</token>
      </line>
      <line no="87">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">hasNoCaptureTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="90"/>
      <line no="91">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//For each capture transaction check the status &amp; determine what to do based on the result.</token>
      </line>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94"/>
      <line no="95">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//In case of order action there will be no invoice here after place order.</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCreatedInvoice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_NOT_IDENTICAL">!==</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setInvoiceId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getCreatedInvoice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderTransactionsRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="100"/>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_SWITCH">switch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getStatus</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_STATUS</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CASE">case</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SUCCESS_STATUS</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$amountCaptured</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getParentPaymentId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="109">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DEFAULT">default</token>
        <token name="T_COLON">:</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_BREAK">break</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addCommentToStatusHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Transaction %s %s for %s with amount %s in status %s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionType</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getStatus</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="123"/>
      <line no="124">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//If order action mode is used, don't set the captured amount on the payment method because it has not been</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//used on an invoice yet. It's captured but not used, so don't set it.</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE_CAPTURE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Get all payments related to the captures done above.</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFilter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">OrderPaymentInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ENTITY_ID</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'in'</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="133"/>
      <line no="134">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderPaymentRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getList</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="136"/>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Set on each payment the total captured.</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setTotalCaptureOnPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140"/>
      <line no="141">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">updateMagentoPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$amountCaptured</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="151">
        <token name="T_DOC_COMMENT">     * Check if there is at least one capture transaction when using order action.</token>
      </line>
      <line no="152">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="153">
        <token name="T_DOC_COMMENT">     * @param OrderTransactionsInterface[] $captureTransactions</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     * @return bool</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="157">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">hasNoCaptureTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="158">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_ORDER</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EMPTY">empty</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="160">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="161"/>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="163">
        <token name="T_DOC_COMMENT">     * Set the transaction ID used for the magento transaction.</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * @param OrderTransactionsInterface $captureTransaction</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">OrderTransactionsInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">upStreamPaySessionId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">''</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">upStreamPaySessionId</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getSessionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="175"/>
      <line no="176">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="177">
        <token name="T_DOC_COMMENT">     * Set the total capture on each payment.</token>
      </line>
      <line no="178">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="179">
        <token name="T_DOC_COMMENT">     * @param OrderPaymentSearchResultsInterface $orderPayments</token>
      </line>
      <line no="180">
        <token name="T_DOC_COMMENT">     * @param array $captures</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="182">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="185">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">setTotalCaptureOnPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">OrderPaymentSearchResultsInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ARRAY">array</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getItems</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmountCaptured</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LT">&lt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$totalCapturedPayment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="190">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOC_COMMENT">/** @var OrderTransactionsInterface $capture */</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">                </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captures</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$capture</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$totalCapturedPayment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$capture</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="194"/>
      <line no="195">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">eventManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dispatch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'payment_usp_write_log'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'orderPayment'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAmountCaptured</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmountCaptured</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalCapturedPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderPaymentRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="199">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="201"/>
      <line no="202">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="203">
        <token name="T_DOC_COMMENT">     * Update the Magento payment by setting the transaction details.</token>
      </line>
      <line no="204">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="205">
        <token name="T_DOC_COMMENT">     * @param bool $atLeastOneCaptureError</token>
      </line>
      <line no="206">
        <token name="T_DOC_COMMENT">     * @param bool $atLeastOneCaptureWaiting</token>
      </line>
      <line no="207">
        <token name="T_DOC_COMMENT">     * @param float $amountCaptured</token>
      </line>
      <line no="208">
        <token name="T_DOC_COMMENT">     * @param float $amount</token>
      </line>
      <line no="209">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="210">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="211">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="212">
        <token name="T_DOC_COMMENT">     * @throws CaptureErrorException</token>
      </line>
      <line no="213">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">updateMagentoPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">bool</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amountCaptured</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">float</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">        </token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="221">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="222">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Every transaction has a capture success &amp; the amount to capture matches the amount captured.</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//To avoid issue when comparing floats, use built-in magento feature (it uses an epsilon of 0.00001).</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">            </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">floatComparator</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">equal</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$amountCaptured</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$amount</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Every capture is a success, so the payment is captured.</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">upStreamPaySessionId</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionClosed</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="230">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">false</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="231">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionApproved</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">                </token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setCurrencyCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getGlobalCurrencyCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//At least one transaction is in waiting, tell Magento that the payment is still pending.</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setIsTransactionPending</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$atLeastOneCaptureError</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_BOOLEAN_AND">&amp;&amp;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EXCLAMATION_MARK">!</token>
        <token name="T_VARIABLE">$atLeastOneCaptureWaiting</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//There is at least one capture in error and no capture in waiting, so we can safely perform a refund on all</token>
      </line>
      <line no="238">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//capture for this order.</token>
      </line>
      <line no="239">
        <token name="T_WHITESPACE">            </token>
        <token name="T_THROW">throw</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NEW">new</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CaptureErrorException</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'At least one Capture transaction is in error, refund all Capture in success.'</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="243"/>
      <line no="244">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="246">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="247"/>
    </source>
  </file>
</phpunit>
