<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="VoidService.php" path="/app/code/UpStreamPay/Core/Model/Actions">
    <totals>
      <lines total="278" comments="74" code="204" executable="117" executed="113" percent="96.58"/>
      <methods count="4" tested="2" percent="50.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="0" percent="0.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UpStreamPay\Core\Model\Actions\VoidService" start="38" executable="117" executed="113" crap="22">
      <namespace name="UpStreamPay\Core\Model\Actions"/>
      <method name="__construct" signature="__construct(Magento\Framework\Api\SearchCriteriaBuilder $searchCriteriaBuilder, UpStreamPay\Client\Model\Client\ClientInterface $client, UpStreamPay\Core\Model\OrderTransactions $orderTransactions, UpStreamPay\Core\Api\OrderPaymentRepositoryInterface $orderPaymentRepository, UpStreamPay\Core\Model\Config $config, UpStreamPay\Core\Model\PaymentFinder\AllTransactionsFinder $findAllTransactions, Psr\Log\LoggerInterface $logger, Magento\Framework\Event\ManagerInterface $eventManager)" start="50" end="60" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="execute" signature="execute(Magento\Payment\Model\InfoInterface $payment): Magento\Payment\Model\InfoInterface" start="72" end="84" crap="4" executable="8" executed="8" coverage="100"/>
      <method name="voidAllAuthorizeTransactions" signature="voidAllAuthorizeTransactions(Magento\Payment\Model\InfoInterface $payment): Magento\Payment\Model\InfoInterface" start="96" end="159" crap="7" executable="41" executed="39" coverage="95.121951219512"/>
      <method name="voidAllCaptureTransactions" signature="voidAllCaptureTransactions(Magento\Payment\Model\InfoInterface $payment): Magento\Payment\Model\InfoInterface" start="174" end="276" crap="10" executable="67" executed="65" coverage="97.014925373134"/>
    </class>
    <coverage>
      <line nr="60">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteWithNoValidPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="74">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteWithNoValidPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="75">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="76">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteWithNoValidPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="77">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="78">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteWithNoValidPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
      </line>
      <line nr="79">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
      </line>
      <line nr="80">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
      </line>
      <line nr="83">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteWithNoValidPaymentAction"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="99">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="100">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="101">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="102">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="106">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="107">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
      </line>
      <line nr="110">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="111">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="113">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="114">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="116">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="121">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="129">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="130">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="131">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="132">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="133">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="134">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="137">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="138">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="143">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="144">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="145">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="146">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="147">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="150">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="151">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="152">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="153">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="154">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="158">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="176">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="179">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="180">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="181">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="182">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="186">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="187">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
      </line>
      <line nr="190">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="191">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="193">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="194">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="196">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="201">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="209">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="210">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="211">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="212">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="213">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="214">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="217">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="218">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="223">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="224">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="225">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="226">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="227">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="228">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="231">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="232">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="233">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="234">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="235">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="236">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="239">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="240">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="241">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="242">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="243">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="245">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="246">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="249">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="253">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="254">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="255">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="256">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="259">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="260">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="263">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="264">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="266">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="267">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="270">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="271">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="272">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="275">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="103">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="112">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="115">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="117">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="135">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="136">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="148">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="155">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidAuthorize"/>
      </line>
      <line nr="183">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCaptureAndAuthorizeNoTransactions"/>
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="192">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="195">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="197">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="215">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="216">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="229">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="237">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="244">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
      <line nr="257">
        <covered by="UpStreamPay\Core\Test\Model\Actions\VoidServiceTest::testExecuteVoidCapture"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * UpStream Pay</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2023 UpStream Pay.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * This file is open source and available under the BSD 3 license.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * See the LICENSE file for more info.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * Author: Claranet France &lt;info@fr.clara.net&gt;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Actions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">GuzzleHttp\Exception\GuzzleException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">JsonException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Api\SearchCriteriaBuilder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Exception\LocalizedException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\InfoInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\MethodInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Log\LoggerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Client\Model\Client\ClientInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\Data\OrderPaymentInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\Data\OrderTransactionsInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Api\OrderPaymentRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\ConflictRetrieveTransactionsException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Config</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\OrderTransactions</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\PaymentFinder\AllTransactionsFinder</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Event\ManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventManager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Config\Source\Debug</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32"/>
      <line no="33">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="34">
        <token name="T_DOC_COMMENT"> * Class VoidService</token>
      </line>
      <line no="35">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="36">
        <token name="T_DOC_COMMENT"> * @package UpStreamPay\Core\Model</token>
      </line>
      <line no="37">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="38">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">VoidService</token>
      </line>
      <line no="39">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="40">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="41">
        <token name="T_DOC_COMMENT">     * @param SearchCriteriaBuilder $searchCriteriaBuilder</token>
      </line>
      <line no="42">
        <token name="T_DOC_COMMENT">     * @param ClientInterface $client</token>
      </line>
      <line no="43">
        <token name="T_DOC_COMMENT">     * @param OrderTransactions $orderTransactions</token>
      </line>
      <line no="44">
        <token name="T_DOC_COMMENT">     * @param OrderPaymentRepositoryInterface $orderPaymentRepository</token>
      </line>
      <line no="45">
        <token name="T_DOC_COMMENT">     * @param Config $config</token>
      </line>
      <line no="46">
        <token name="T_DOC_COMMENT">     * @param AllTransactionsFinder $findAllTransactions</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT">     * @param LoggerInterface $logger</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT">     * @param EventManager $eventManager</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="50">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="51">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">SearchCriteriaBuilder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$searchCriteriaBuilder</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="52">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ClientInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$client</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="53">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderTransactions</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="54">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderPaymentRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPaymentRepository</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="56">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">AllTransactionsFinder</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$findAllTransactions</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="57">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="58">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">EventManager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$eventManager</token>
      </line>
      <line no="59">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="60">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="61"/>
      <line no="62">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * Void authorize success transaction for a given order.</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="68">
        <token name="T_DOC_COMMENT">     * @throws GuzzleException</token>
      </line>
      <line no="69">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="70">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="71">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">voidAllAuthorizeTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE_CAPTURE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">voidAllCaptureTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_ORDER</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">voidAllAuthorizeTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">voidAllCaptureTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="81">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="82"/>
      <line no="83">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="84">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="85"/>
      <line no="86">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">     * Void all authorize transactions.</token>
      </line>
      <line no="88">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="89">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="90">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="91">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="92">
        <token name="T_DOC_COMMENT">     * @throws GuzzleException</token>
      </line>
      <line no="93">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="94">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="95">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="96">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">voidAllAuthorizeTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="97">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="98">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Get the authorized transactions with a success status for the current order.</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$authorizeTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findAllTransactions</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">AUTHORIZE_ACTION</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SUCCESS_STATUS</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="104"/>
      <line no="105">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//If there are no authorize transactions then there is no need to go further.</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$authorizeTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="109"/>
      <line no="110">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$authorizeTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="113">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'amount'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBaseGrandTotal</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="114">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'currency_code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getGlobalCurrencyCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="116">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'amount'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="117">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118"/>
      <line no="119">
        <token name="T_WHITESPACE">            </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//Void from API.</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$voidResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">client</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">void</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="122">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ConflictRetrieveTransactionsException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="123">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//A conflict on the API call has been found, don't block the process. This is not a standard error</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//&amp; it should not happen most of the time. In case it does, try to void as many transactions as</token>
      </line>
      <line no="125">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//we can.</token>
      </line>
      <line no="126">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="128"/>
      <line no="129">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDebugMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Debug</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SIMPLE_VALUE</token>
      </line>
      <line no="130">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDebugMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Debug</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG_VALUE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="131">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Payment denied for order %s, void transaction response:'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$voidResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$voidResponse</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="141"/>
      <line no="142">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Save the void transaction in DB.</token>
      </line>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$voidTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderTransactions</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTransactionFromResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$voidResponse</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="146">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getQuoteId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="147">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getParentPaymentId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addCommentToStatusHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Voiding authorize transaction %s for payment %s with void transaction %s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="152">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="153">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$authorizeTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="154">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$voidTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="155">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="156">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="157"/>
      <line no="158">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="159">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="160"/>
      <line no="161">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="162">
        <token name="T_DOC_COMMENT">     * Void all Capture transactions.</token>
      </line>
      <line no="163">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="164">
        <token name="T_DOC_COMMENT">     * A capture transaction has to be refunded on the API.</token>
      </line>
      <line no="165">
        <token name="T_DOC_COMMENT">     * In this scenario this takes place if an error is detected right after the place order.</token>
      </line>
      <line no="166">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="167">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="168">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="169">
        <token name="T_DOC_COMMENT">     * @return InfoInterface</token>
      </line>
      <line no="170">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="171">
        <token name="T_DOC_COMMENT">     * @throws GuzzleException</token>
      </line>
      <line no="172">
        <token name="T_DOC_COMMENT">     * @throws JsonException</token>
      </line>
      <line no="173">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">voidAllCaptureTransactions</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InfoInterface</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$refunds</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177"/>
      <line no="178">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Get the captured transactions with a success status for the current order.</token>
      </line>
      <line no="179">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">findAllTransactions</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="180">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">CAPTURE_ACTION</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="181">
        <token name="T_WHITESPACE">            </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="182">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SUCCESS_STATUS</token>
      </line>
      <line no="183">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="184"/>
      <line no="185">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//If there are no capture transactions then there is no need to go further.</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">        </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">count</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_LNUMBER">0</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="189"/>
      <line no="190">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransactions</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="191">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="192">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
      </line>
      <line no="193">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'amount'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBaseGrandTotal</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="194">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'currency_code'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getGlobalCurrencyCode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'amount'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198"/>
      <line no="199">
        <token name="T_WHITESPACE">            </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="200">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//Refund from API.</token>
      </line>
      <line no="201">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$refundResponse</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">client</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">refund</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$body</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="202">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">ConflictRetrieveTransactionsException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="203">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//A conflict on the API call has been found, don't block the process. This is not a standard error</token>
      </line>
      <line no="204">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//&amp; it should not happen most of the time. In case it does, try to void as many transactions as</token>
      </line>
      <line no="205">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//we can.</token>
      </line>
      <line no="206">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONTINUE">continue</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="207">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="208"/>
      <line no="209">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDebugMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Debug</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">SIMPLE_VALUE</token>
      </line>
      <line no="210">
        <token name="T_WHITESPACE">                </token>
        <token name="T_BOOLEAN_OR">||</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getDebugMode</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Debug</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">DEBUG_VALUE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="211">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="212">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="213">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Payment refunded for order %s, refund transaction response:'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="214">
        <token name="T_WHITESPACE">                        </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="215">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="216">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="217">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$refundResponse</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="218">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">debug</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">print_r</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$refundResponse</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="219">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="220">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="221"/>
      <line no="222">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Save the refund transaction in DB.</token>
      </line>
      <line no="223">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderTransactions</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">createTransactionFromResponse</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="224">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$refundResponse</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="225">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="226">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getQuoteId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="227">
        <token name="T_WHITESPACE">                </token>
        <token name="T_INT_CAST">(int)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getParentPaymentId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="228">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getInvoiceId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="229">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="230"/>
      <line no="231">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addCommentToStatusHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="232">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Voiding capture transaction %s &amp; refunding %s with refund transaction %s for payment %s'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="233">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$captureTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="234">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="235">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="236">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMethod</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="237">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="238"/>
      <line no="239">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getStatus</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderTransactions</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ERROR_STATUS</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="240">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$errorMessage</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="241">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Transaction refund with ID %s for amount %s is in error, refund it in UpStream admin panel.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="242">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTransactionId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="243">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="244">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="245">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="246">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addCommentToStatusHistory</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$errorMessage</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="247">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="248"/>
      <line no="249">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$refunds</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getParentPaymentId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$refundTransaction</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="250">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="251"/>
      <line no="252">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Get all payment related to the refunds done above.</token>
      </line>
      <line no="253">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addFilter</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="254">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">OrderPaymentInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ENTITY_ID</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="255">
        <token name="T_WHITESPACE">            </token>
        <token name="T_STRING">array_keys</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$refunds</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="256">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'in'</token>
      </line>
      <line no="257">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="258"/>
      <line no="259">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">searchCriteriaBuilder</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="260">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderPaymentRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getList</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$searchCriteria</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="261"/>
      <line no="262">
        <token name="T_WHITESPACE">        </token>
        <token name="T_COMMENT">//Set on each payment the total refunded.</token>
      </line>
      <line no="263">
        <token name="T_WHITESPACE">        </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayments</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getItems</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="264">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$totalRefundForPayment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DNUMBER">0.00</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="265">
        <token name="T_WHITESPACE">            </token>
        <token name="T_DOC_COMMENT">/** @var OrderTransactionsInterface $refund */</token>
      </line>
      <line no="266">
        <token name="T_WHITESPACE">            </token>
        <token name="T_FOREACH">foreach</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$refunds</token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_AS">as</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$refund</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="267">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$totalRefundForPayment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS_EQUAL">+=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$refund</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmount</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="268">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="269"/>
      <line no="270">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">eventManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dispatch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'payment_usp_write_log'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'orderPayment'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="271">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setAmountRefunded</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getAmountRefunded</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PLUS">+</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$totalRefundForPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="272">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderPaymentRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$orderPayment</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="273">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="274"/>
      <line no="275">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="276">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="277">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="278"/>
    </source>
  </file>
</phpunit>
