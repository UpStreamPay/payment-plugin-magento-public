<?xml version="1.0"?>
<phpunit xmlns="https://schema.phpunit.de/coverage/1.0">
  <file name="ReturnUrl.php" path="/app/code/UpStreamPay/Core/Controller/Payment">
    <totals>
      <lines total="200" comments="62" code="138" executable="48" executed="48" percent="100.00"/>
      <methods count="3" tested="3" percent="100.00"/>
      <functions count="0" tested="0" percent="0"/>
      <classes count="1" tested="1" percent="100.00"/>
      <traits count="0" tested="0" percent="0"/>
    </totals>
    <class name="UpStreamPay\Core\Controller\Payment\ReturnUrl" start="53" executable="48" executed="48" crap="12">
      <namespace name="UpStreamPay\Core\Controller\Payment"/>
      <method name="__construct" signature="__construct(Magento\Checkout\Model\Session $checkoutSession, Magento\Framework\Controller\Result\RedirectFactory $redirectFactory, Psr\Log\LoggerInterface $logger, UpStreamPay\Core\Model\Config $config, Magento\Sales\Api\OrderRepositoryInterface $orderRepository, Magento\Sales\Model\Order\Payment\Processor $paymentProcessor, Magento\Sales\Api\InvoiceRepositoryInterface $invoiceRepository, Magento\Framework\Message\ManagerInterface $messageManager, Magento\Sales\Model\Order\Email\Sender\OrderSender $orderSender, Magento\Sales\Model\Order\Email\Sender\InvoiceSender $invoiceSender, Magento\Framework\Event\Manager $eventManager)" start="68" end="80" crap="1" executable="1" executed="1" coverage="100"/>
      <method name="execute" signature="execute(): Magento\Framework\Controller\ResultInterface" start="88" end="151" crap="7" executable="35" executed="35" coverage="100"/>
      <method name="denyPayment" signature="denyPayment(Magento\Payment\Model\InfoInterface $payment, Magento\Sales\Api\Data\OrderInterface $order): void" start="161" end="178" crap="2" executable="12" executed="12" coverage="100"/>
      <method name="validateForCsrf" signature="validateForCsrf(Magento\Framework\App\RequestInterface $request): ?bool" start="186" end="189" crap="1" executable="0" executed="0" coverage="100"/>
      <method name="createCsrfValidationException" signature="createCsrfValidationException(Magento\Framework\App\RequestInterface $request): ?Magento\Framework\App\Request\InvalidRequestException" start="195" end="198" crap="1" executable="0" executed="0" coverage="100"/>
    </class>
    <coverage>
      <line nr="80">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="90">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="93">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="94">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="96">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="98">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="99">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="100">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
      </line>
      <line nr="101">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="105">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="106">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="107">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="110">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="111">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="114">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="115">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="117">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
      </line>
      <line nr="118">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="119">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="120">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="123">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="124">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="126">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Authorize action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Capture action&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteAction with data set &quot;Order action&quot;"/>
      </line>
      <line nr="127">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="129">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="132">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="133">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="134">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="139">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="140">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="141">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="143">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="144">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
      </line>
      <line nr="147">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="148">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="150">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="164">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment action exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Generic exception&quot;"/>
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="165">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="167">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="168">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="170">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="171">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="172">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="173">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="174">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="169">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="175">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
      <line nr="176">
        <covered by="UpStreamPay\Core\Test\Controller\Payment\ReturnUrlTest::testExecuteActionException with data set &quot;Payment deny exception&quot;"/>
      </line>
    </coverage>
    <source>
      <line no="1">
        <token name="T_OPEN_TAG">&lt;?php</token>
      </line>
      <line no="2">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="3">
        <token name="T_DOC_COMMENT"> * UpStream Pay</token>
      </line>
      <line no="4">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="5">
        <token name="T_DOC_COMMENT"> * Copyright (c) 2023 UpStream Pay.</token>
      </line>
      <line no="6">
        <token name="T_DOC_COMMENT"> * This file is open source and available under the BSD 3 license.</token>
      </line>
      <line no="7">
        <token name="T_DOC_COMMENT"> * See the LICENSE file for more info.</token>
      </line>
      <line no="8">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="9">
        <token name="T_DOC_COMMENT"> * Author: Claranet France &lt;info@fr.clara.net&gt;</token>
      </line>
      <line no="10">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="11">
        <token name="T_DECLARE">declare</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">strict_types</token>
        <token name="T_EQUAL">=</token>
        <token name="T_LNUMBER">1</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="12"/>
      <line no="13">
        <token name="T_NAMESPACE">namespace</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Controller\Payment</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="14"/>
      <line no="15">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Checkout\Model\Session</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="16">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\Action\HttpGetActionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="17">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\Action\HttpPostActionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="18">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\CsrfAwareActionInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="19">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\Request\InvalidRequestException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="20">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\App\RequestInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="21">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Controller\Result\Redirect</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="22">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Controller\Result\RedirectFactory</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="23">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Controller\ResultInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="24">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Event\Manager</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="25">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Exception\LocalizedException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="26">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Message\ManagerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="27">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Framework\Phrase</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="28">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\InfoInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="29">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Payment\Model\MethodInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="30">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Api\Data\InvoiceInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="31">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Api\Data\OrderInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="32">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Api\InvoiceRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="33">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Api\OrderRepositoryInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="34">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Model\Order\Email\Sender\InvoiceSender</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="35">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Model\Order\Email\Sender\OrderSender</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="36">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Model\Order\Invoice</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="37">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Magento\Sales\Model\Order\Payment\Processor</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="38">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">Psr\Log\LoggerInterface</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="39">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Throwable</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="40">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\AuthorizeErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="41">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\CaptureErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="42">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Exception\OrderErrorException</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="43">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Model\Config</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="44">
        <token name="T_USE">use</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_NAME_QUALIFIED">UpStreamPay\Core\Observer\SetOrderSentToPurseObserver</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="45"/>
      <line no="46">
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="47">
        <token name="T_DOC_COMMENT"> * Class ReturnUrl</token>
      </line>
      <line no="48">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="49">
        <token name="T_DOC_COMMENT"> * @package UpStreamPay\Core\Controller\Payment</token>
      </line>
      <line no="50">
        <token name="T_DOC_COMMENT"> *</token>
      </line>
      <line no="51">
        <token name="T_DOC_COMMENT"> * @see base_url/upstreampay/payment/returnurl</token>
      </line>
      <line no="52">
        <token name="T_DOC_COMMENT"> */</token>
      </line>
      <line no="53">
        <token name="T_CLASS">class</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ReturnUrl</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IMPLEMENTS">implements</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HttpGetActionInterface</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">HttpPostActionInterface</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CsrfAwareActionInterface</token>
      </line>
      <line no="54">
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="55">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONST">const</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">URL_PATH</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'upstreampay/payment/returnurl'</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="56"/>
      <line no="57">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="58">
        <token name="T_DOC_COMMENT">     * @param Session $checkoutSession</token>
      </line>
      <line no="59">
        <token name="T_DOC_COMMENT">     * @param RedirectFactory $redirectFactory</token>
      </line>
      <line no="60">
        <token name="T_DOC_COMMENT">     * @param LoggerInterface $logger</token>
      </line>
      <line no="61">
        <token name="T_DOC_COMMENT">     * @param Config $config</token>
      </line>
      <line no="62">
        <token name="T_DOC_COMMENT">     * @param OrderRepositoryInterface $orderRepository</token>
      </line>
      <line no="63">
        <token name="T_DOC_COMMENT">     * @param Processor $paymentProcessor</token>
      </line>
      <line no="64">
        <token name="T_DOC_COMMENT">     * @param InvoiceRepositoryInterface $invoiceRepository</token>
      </line>
      <line no="65">
        <token name="T_DOC_COMMENT">     * @param ManagerInterface $messageManager</token>
      </line>
      <line no="66">
        <token name="T_DOC_COMMENT">     * @param OrderSender $orderSender</token>
      </line>
      <line no="67">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="68">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">__construct</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="69">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Session</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$checkoutSession</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="70">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">RedirectFactory</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$redirectFactory</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="71">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">LoggerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$logger</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="72">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Config</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$config</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="73">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderRepository</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="74">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Processor</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$paymentProcessor</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="75">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvoiceRepositoryInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$invoiceRepository</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="76">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ManagerInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$messageManager</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="77">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderSender</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$orderSender</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="78">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">InvoiceSender</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$invoiceSender</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="79">
        <token name="T_WHITESPACE">        </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_READONLY">readonly</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">Manager</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$eventManager</token>
      </line>
      <line no="80">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="81"/>
      <line no="82">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="83">
        <token name="T_DOC_COMMENT">     * Handle the redirect coming from UpStream Pay.</token>
      </line>
      <line no="84">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="85">
        <token name="T_DOC_COMMENT">     * @return ResultInterface</token>
      </line>
      <line no="86">
        <token name="T_DOC_COMMENT">     * @throws LocalizedException</token>
      </line>
      <line no="87">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="88">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">execute</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">ResultInterface</token>
      </line>
      <line no="89">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="90">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$resultRedirect</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">redirectFactory</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">create</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="91"/>
      <line no="92">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="93">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkoutSession</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getLastRealOrder</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="94">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="95"/>
      <line no="96">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">eventManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">dispatch</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">SetOrderSentToPurseObserver</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">EVENT_NAME</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'order'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="97"/>
      <line no="98">
        <token name="T_WHITESPACE">            </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="99">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">paymentProcessor</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">authorize</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBaseTotalDue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="100">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="101">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_AUTHORIZE_CAPTURE</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="102">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOC_COMMENT">/** @var InvoiceInterface $invoice */</token>
      </line>
      <line no="103">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//We can only have one invoice because we come back from the redirect url.</token>
      </line>
      <line no="104">
        <token name="T_WHITESPACE">                </token>
        <token name="T_DOC_COMMENT">/** @var Invoice $invoice */</token>
      </line>
      <line no="105">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_EQUAL">=</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getInvoiceCollection</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getFirstItem</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="106">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setCreatedInvoice</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="107">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">paymentProcessor</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">capture</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="108"/>
      <line no="109">
        <token name="T_WHITESPACE">                </token>
        <token name="T_COMMENT">//After capture is done trigger pay of the invoice.</token>
      </line>
      <line no="110">
        <token name="T_WHITESPACE">                </token>
        <token name="T_IF">if</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getIsPaid</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="111">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">pay</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="112">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="113"/>
      <line no="114">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="115">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">invoiceRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="116"/>
      <line no="117">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">invoiceSender</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">send</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$invoice</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="118">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_ELSEIF">elseif</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getPaymentAction</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_IS_IDENTICAL">===</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">MethodInterface</token>
        <token name="T_DOUBLE_COLON">::</token>
        <token name="T_STRING">ACTION_ORDER</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="119">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">paymentProcessor</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">order</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getBaseTotalDue</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="120">
        <token name="T_WHITESPACE">                </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="121">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="122"/>
      <line no="123">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderSender</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">send</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="124">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$resultRedirect</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'checkout/onepage/success'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_secure'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="125"/>
      <line no="126">
        <token name="T_WHITESPACE">            </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resultRedirect</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="127">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">AuthorizeErrorException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">CaptureErrorException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_PIPE">|</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderErrorException</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="128">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//An authorize error has been found =&gt; we can deny the payment, it will cancel the order.</token>
      </line>
      <line no="129">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">denyPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="130"/>
      <line no="131">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//Restore the user quote</token>
      </line>
      <line no="132">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="133">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">checkoutSession</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">restoreQuote</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="134">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="135">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//In case of another exception, payment has to be denied but the quote can't be restored.</token>
      </line>
      <line no="136">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//This catch means something went wrong on the API side (409 conflict for instance or other weird issue).</token>
      </line>
      <line no="137">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//To avoid risks &amp; having a cart that will produce errors down the line when we try to pay it's better</token>
      </line>
      <line no="138">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//to not restore the quote &amp; cancel the payment. This case should not happen very often.</token>
      </line>
      <line no="139">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Error while trying to handle the order after redirect from UpStream Pay'</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="140">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Order ID was '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="141">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'exception'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$exception</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getTraceAsString</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="142"/>
      <line no="143">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">denyPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="144">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">orderRepository</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">save</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="145">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="146"/>
      <line no="147">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">messageManager</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">addErrorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">config</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getErrorMessage</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="148">
        <token name="T_WHITESPACE">        </token>
        <token name="T_VARIABLE">$resultRedirect</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">setPath</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'checkout/cart'</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_SQUARE">[</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'_secure'</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOUBLE_ARROW">=&gt;</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_CLOSE_SQUARE">]</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="149"/>
      <line no="150">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$resultRedirect</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="151">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="152"/>
      <line no="153">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="154">
        <token name="T_DOC_COMMENT">     * Deny the payment &amp; handle exception.</token>
      </line>
      <line no="155">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="156">
        <token name="T_DOC_COMMENT">     * @param InfoInterface $payment</token>
      </line>
      <line no="157">
        <token name="T_DOC_COMMENT">     * @param OrderInterface $order</token>
      </line>
      <line no="158">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="159">
        <token name="T_DOC_COMMENT">     * @return void</token>
      </line>
      <line no="160">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="161">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PRIVATE">private</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">denyPayment</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">InfoInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_COMMA">,</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">OrderInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">void</token>
      </line>
      <line no="162">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="163">
        <token name="T_WHITESPACE">        </token>
        <token name="T_TRY">try</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="164">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$payment</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">deny</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="165">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_CATCH">catch</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">Throwable</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$throwable</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="166">
        <token name="T_WHITESPACE">            </token>
        <token name="T_COMMENT">//If even the denyPayment doesn't work (it could happen if the API is down) then log but nothing else.</token>
      </line>
      <line no="167">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="168">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Error while trying to deny payment for the order after redirect from UpStream Pay'</token>
      </line>
      <line no="169">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="170">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'Order ID was '</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_DOT">.</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getEntityId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="171">
        <token name="T_WHITESPACE">            </token>
        <token name="T_VARIABLE">$this</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">logger</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">critical</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="172">
        <token name="T_WHITESPACE">                </token>
        <token name="T_STRING">sprintf</token>
        <token name="T_OPEN_BRACKET">(</token>
      </line>
      <line no="173">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_CONSTANT_ENCAPSED_STRING">'All transactions for the order with ID %s must be refunded / canceled in UpStream Pay BO.'</token>
        <token name="T_COMMA">,</token>
      </line>
      <line no="174">
        <token name="T_WHITESPACE">                    </token>
        <token name="T_VARIABLE">$order</token>
        <token name="T_OBJECT_OPERATOR">-&gt;</token>
        <token name="T_STRING">getQuoteId</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="175">
        <token name="T_WHITESPACE">                </token>
        <token name="T_CLOSE_BRACKET">)</token>
      </line>
      <line no="176">
        <token name="T_WHITESPACE">            </token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="177">
        <token name="T_WHITESPACE">        </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="178">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="179"/>
      <line no="180">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="181">
        <token name="T_DOC_COMMENT">     * @codeCoverageIgnore</token>
      </line>
      <line no="182">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="183">
        <token name="T_DOC_COMMENT">     *</token>
      </line>
      <line no="184">
        <token name="T_DOC_COMMENT">     * We have no particular CSRF validation to do &amp; we don't want to use the default one.</token>
      </line>
      <line no="185">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="186">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">validateForCsrf</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RequestInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">bool</token>
      </line>
      <line no="187">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="188">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">true</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="189">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="190"/>
      <line no="191">
        <token name="T_WHITESPACE">    </token>
        <token name="T_DOC_COMMENT">/**</token>
      </line>
      <line no="192">
        <token name="T_DOC_COMMENT">     * @codeCoverageIgnore</token>
      </line>
      <line no="193">
        <token name="T_DOC_COMMENT">     * @inheritDoc</token>
      </line>
      <line no="194">
        <token name="T_DOC_COMMENT">     */</token>
      </line>
      <line no="195">
        <token name="T_WHITESPACE">    </token>
        <token name="T_PUBLIC">public</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_FUNCTION">function</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">createCsrfValidationException</token>
        <token name="T_OPEN_BRACKET">(</token>
        <token name="T_STRING">RequestInterface</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_VARIABLE">$request</token>
        <token name="T_CLOSE_BRACKET">)</token>
        <token name="T_COLON">:</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_QUESTION_MARK">?</token>
        <token name="T_STRING">InvalidRequestException</token>
      </line>
      <line no="196">
        <token name="T_WHITESPACE">    </token>
        <token name="T_OPEN_CURLY">{</token>
      </line>
      <line no="197">
        <token name="T_WHITESPACE">        </token>
        <token name="T_RETURN">return</token>
        <token name="T_WHITESPACE"> </token>
        <token name="T_STRING">null</token>
        <token name="T_SEMICOLON">;</token>
      </line>
      <line no="198">
        <token name="T_WHITESPACE">    </token>
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="199">
        <token name="T_CLOSE_CURLY">}</token>
      </line>
      <line no="200"/>
    </source>
  </file>
</phpunit>
